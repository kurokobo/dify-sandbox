ARG GO_VERSION=1.20.6
ARG NODE_VERSION=20.11.1-1nodesource1

# Build stage: Cross-compile the Go binaries for the target architecture
FROM --platform=${BUILDPLATFORM} golang:${GO_VERSION}-bookworm AS build
ARG TARGETOS
ARG TARGETARCH

RUN --mount=type=cache,target=/var/lib/apt,sharing=locked \
    --mount=type=cache,target=/var/cache/apt,sharing=locked \
    dpkg --add-architecture arm64 \
    && apt-get update \
    && apt-get install -y pkg-config gcc libseccomp-dev \
    && apt-get install -y libseccomp-dev:arm64 gcc-aarch64-linux-gnu

WORKDIR /src
RUN --mount=type=cache,target=/go/pkg/mod/ \
    --mount=type=bind,source=go.sum,target=go.sum \
    --mount=type=bind,source=go.mod,target=go.mod \
    go mod download -x

RUN --mount=type=cache,target=/go/pkg/mod/ \
    --mount=type=bind,target=.,rw \
    GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -o /bin/main -ldflags="-s -w" cmd/server/main.go

# Final stage: Copy the Go binaries and install the dependencies
FROM python:3.10-slim AS final
ARG NODE_VERSION

RUN --mount=type=cache,target=/var/lib/apt,sharing=locked \
    --mount=type=cache,target=/var/cache/apt,sharing=locked \
    apt-get update \
    && apt-get install -y curl \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y pkg-config libseccomp-dev wget xz-utils nodejs=${NODE_VERSION}

COPY dependencies/python-requirements.txt /dependencies/python-requirements.txt
RUN --mount=type=cache,target=/root/.cache/pip,sharing=locked \
    pip3 install jinja2 requests httpx PySocks httpx[socks]

COPY --from=build /bin/main /main
COPY conf/config.yaml /conf/config.yaml
COPY docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /main \
    && ln -s /usr/bin/nodejs /usr/local/bin/node

ENTRYPOINT ["bash", "/entrypoint.sh"]
